/*
 * Hedgewars, a worms-like game
 * Copyright (c) 2005 Andrey Korotaev <unC0Rr@gmail.com>
 *
 * Distributed under the terms of the BSD-modified licence:
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * with the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
 * EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <qstring.h>
#include <qfile.h>
#include <qtextstream.h>
#include "hw.h"

class QString;
class QTextStream;
class QFile;
class HWForm;

class HWTeam
{
	public:
		HWTeam()
		{
			TeamName = "unnamed";
			for (int i = 0; i < 8; i++) HHName[i].sprintf("hedgehog %d", i);
			Grave = "Simple";
		}
		QString TeamName;
		QString HHName[8];
		QString	Grave;
		QString Fort;
		
		bool LoadFromFile(const QString & filename)
		{
			QFile cfgfile(filename);
			if (!cfgfile.open(IO_ReadOnly)) return false;
			QTextStream stream(&cfgfile);
			stream.setEncoding(QTextStream::Unicode);	
			QString str;
			
			while (!stream.atEnd())
			{
				str = stream.readLine();
				if (str.startsWith(";")) continue;
				if (str.startsWith("teamname "))
				{
					str.remove(0, 9);
					TeamName = str;
				} else
				if (str.startsWith("name"))
				{
					str.remove(0, 4);
					long i = str.left(1).toLong();
					if ((i < 0) || (i > 7)) continue;
					str.remove(0, 2);
					HHName[i] = str;
				} else
				if (str.startsWith("grave "))
				{
					str.remove(0, 6);
					Grave = str;
				} else
				if (str.startsWith("fort "))
				{
					str.remove(0, 5);
					Fort = str;
				}				
			}
			cfgfile.close();
			return true;
		}
		
		bool SaveToFile(const QString & filename)
		{			
			QFile cfgfile(filename);
			if (!cfgfile.open(IO_WriteOnly)) return false;
			QTextStream stream(&cfgfile);
			stream.setEncoding(QTextStream::Unicode);
			stream << "; Generated by Hedgewars, do not modify" << endl;
			stream << "teamname " << TeamName << endl;
			for (int i = 0; i < 8; i++)
				stream << "name" << i << " " << HHName[i] << endl;
			stream << "grave " << Grave << endl;
			stream << "fort " << Fort << endl;
			cfgfile.close();
			return true;
		}
		
		void ToPage(HWForm * form)
		{
			form->EditTeamName->setText(TeamName);
			form->HHName0->setText(HHName[0]);
			form->HHName1->setText(HHName[1]);
			form->HHName2->setText(HHName[2]);
			form->HHName3->setText(HHName[3]);
			form->HHName4->setText(HHName[4]);
			form->HHName5->setText(HHName[5]);
			form->HHName6->setText(HHName[6]);
			form->HHName7->setText(HHName[7]);
			
			const QListBox * lb = form->CBGraves->listBox();
			form->CBGraves->setCurrentItem(lb->index(lb->findItem(Grave)));
			
			lb = form->CBForts->listBox();
			form->CBForts->setCurrentItem(lb->index(lb->findItem(Fort)));
		}
		
		void FromPage(HWForm * form)
		{
			TeamName  = form->EditTeamName->text();
			HHName[0] = form->HHName0->text();
			HHName[1] = form->HHName1->text();
			HHName[2] = form->HHName2->text();
			HHName[3] = form->HHName3->text();
			HHName[4] = form->HHName4->text();
			HHName[5] = form->HHName5->text();
			HHName[6] = form->HHName6->text();
			HHName[7] = form->HHName7->text();
			
			Grave = form->CBGraves->currentText();
			Fort = form->CBForts->currentText();
		}
	private:
};
